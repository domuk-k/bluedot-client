{"version":3,"sources":["components/oraganisms/Navigation.tsx","components/Layout.tsx","components/atoms/LoginButton.tsx","components/atoms/Logo.tsx","components/atoms/NavList.tsx","utils/mailCheckSchema.ts","components/atoms/Input.tsx","components/atoms/SocialButton.jsx","components/atoms/InputErrorMessage.tsx","components/modules/MailCheckModal.tsx","utils/sigupSchema.ts","components/modules/SignUpModal.tsx","components/oraganisms/Hero.tsx","components/modules/UserCarousel.tsx","components/atoms/PostTabButton.tsx","components/modules/PostsList.tsx","pages/Home.tsx","pages/NotFound.tsx","pages/Profile.tsx","pages/Router.tsx","theme/customTheme.ts","App.tsx","serviceWorker.ts","reportWebVitals.ts","redux/module/reducer.ts","redux/configStore.ts","index.tsx"],"names":["ModalTypes","Layout","props","className","direction","align","overflowX","LoginButton","onClick","bg","memo","Logo","variant","MenuListItems","children","listStyleType","marginRight","NavList","display","flexGrow","to","Yup","email","matches","message","excludeEmptyString","required","Input","borderColor","SocialLoginButton","name","socialLogo","FcGoogle","FaFacebook","border","w","color","fontWeight","fontSize","_hover","background","_active","as","mr","mt","InputErrorMessage","m","MailCheckModal","setModalMode","textAlign","initialValues","onSubmit","values","setSubmitting","validationSchema","mailCheckSchema","errors","isSubmitting","noValidate","spacing","htmlFor","Field","type","value","focusBorderColor","isDisabled","_disabled","pt","max","password","SignUpModal","React","useState","checkedItems","setCheckedItems","allChecked","every","Boolean","isIndeterminate","some","show","setShow","handlePWshow","handleClickCheck","e","target","checked","allowance","setTimeout","alert","JSON","stringify","sigupSchema","touched","isReadOnly","id","size","pr","placeholder","width","p","onMouseDown","onMouseUp","View","ViewOff","Checkbox","isChecked","onChange","defaultIsChecked","variantcolor","px","Navigation","useDisclosure","isOpen","onOpen","onClose","modal","signInAndUp","useCallback","TypedModal","pos","userSelect","zIndex","style","backdropFilter","justify","blockScrollOnMount","closeOnOverlayClick","isCentered","preserveScrollBarGap","closeOnEsc","Hero","Slider","h","maxH","dots","infinite","autoplay","autoplaySpeed","backgroundSize","bgPos","bgRepeat","bottom","left","Carousel","padding","d","speed","slidesToShow","slidesToScroll","swipeToSlide","variableWidth","Array","fill","map","v","i","height","transition","repeat","PostTabButton","rounded","PostsList","total","music","design","mediaArt","setType","state","classList","mb","minChildWidth","minH","src","my","flexShrink","wrap","Home","UserCarousel","NotFound","href","Profile","auth","ratio","right","maxW","flex","top","Router","FallbackComponent","history","path","component","customTheme","theme","styles","global","body","h2","colors","primary","100","200","300","400","500","600","700","800","900","basicBlack","custom","warn","cta","subtle","subText","App","resetCSS","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","router","connectRouter","configStore","createStore","reducer","composeWithDevTools","applyMiddleware","routerMiddleware","createBrowserHistory","store","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.cc66840a.chunk.js","sourcesContent":["import {\n  Box,\n  Flex,\n  Modal,\n  ModalOverlay,\n  useDisclosure,\n} from '@chakra-ui/core';\nimport React, {\n  ReactElement,\n  useCallback,\n  useState,\n} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport LoginButton from '../atoms/LoginButton';\nimport Logo from '../atoms/Logo';\nimport NavList from '../atoms/NavList';\nimport MailCheckModal from '../modules/MailCheckModal';\nimport SignUpModal from '../modules/SignUpModal';\n\nenum ModalTypes {\n  mailCheck,\n  signIn,\n}\n\nexport default function Navigation(): ReactElement {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [modal, setModalMode] = useState(\n    ModalTypes['mailCheck']\n  );\n  const signInAndUp = useCallback(() => {\n    setModalMode(0);\n    onOpen();\n  }, [onOpen]);\n\n  const TypedModal = useCallback(\n    (type: ModalTypes) => {\n      switch (type) {\n        case 0:\n          return (\n            <MailCheckModal setModalMode={setModalMode} />\n          );\n        case 1:\n          return (\n            <SignUpModal setModalMode={setModalMode} />\n          );\n\n        default:\n          return <Redirect to=\"/\" />;\n      }\n    },\n    [setModalMode]\n  );\n\n  return (\n    <Box\n      className=\"nav-wrapper\"\n      as=\"nav\"\n      p=\".5rem\"\n      color=\"white\"\n      w=\"100vw\"\n      bg=\"rgba(0,0,0,.3)\"\n      pos=\"fixed\"\n      userSelect=\"none\"\n      zIndex=\"2\"\n      style={{ backdropFilter: 'blur(5px)' }}\n    >\n      <Flex\n        className=\"nav-container\"\n        align=\"center\"\n        justify=\"space-between\"\n        w={['90vw', '96vw']}\n        m=\"auto\"\n      >\n        <Logo />\n        <NavList />\n        <LoginButton onClick={signInAndUp} />\n\n        {isOpen && (\n          <Modal\n            blockScrollOnMount={true}\n            closeOnOverlayClick={true}\n            isOpen={isOpen}\n            onClose={onClose}\n            isCentered\n            preserveScrollBarGap\n            closeOnEsc\n          >\n            <ModalOverlay />\n            {TypedModal(modal)}\n          </Modal>\n        )}\n      </Flex>\n    </Box>\n  );\n}\n","import { Flex } from '@chakra-ui/core';\nimport React from 'react';\n\nconst Layout: React.FC = (props) => {\n  return (\n    <Flex\n      className=\"layout\"\n      direction=\"column\"\n      align=\"center\"\n      overflowX=\"hidden\"\n      {...props}\n    />\n  );\n};\n\nexport default Layout;\n","import { Button } from '@chakra-ui/core';\nimport React, { memo } from 'react';\n// import { SearchIcon } from '@chakra-ui/icons';\n\ntype LoginProps = {\n  onClick(): void;\n};\n\nconst LoginButton: React.FC<LoginProps> = ({ onClick }) => {\n  return (\n    <>\n      {/* <SearchIcon /> */}\n      <Button bg=\"primary.700\" onClick={onClick}>\n        회원가입/로긴\n      </Button>\n    </>\n  );\n};\n\nexport default memo(LoginButton);\n","import { Button } from '@chakra-ui/core';\nimport React, { memo } from 'react';\n\ninterface Props {}\n\nconst Logo = (props: Props) => {\n  return (\n    <Button variant=\"outline\" bg=\"primary.500\">\n      bluedot\n    </Button>\n  );\n};\n\nexport default memo(Logo);\n","import { ListItem, UnorderedList } from '@chakra-ui/core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst MenuListItems: React.FC = ({ children }) => (\n  <ListItem listStyleType=\"none\" marginRight=\"20px\">\n    {children}\n  </ListItem>\n);\n\ninterface Props {}\n\nconst NavList = (props: Props) => {\n  return (\n    <UnorderedList display=\"flex\" flexGrow={1}>\n      <MenuListItems>\n        <Link to=\"/\">홈</Link>\n      </MenuListItems>\n      <MenuListItems>\n        <Link to=\"/videos\">닷비디오</Link>\n      </MenuListItems>\n      <MenuListItems>\n        <Link to=\"/following\">팔로우</Link>\n      </MenuListItems>\n      <MenuListItems>\n        <Link to=\"/profile\">프로필</Link>\n      </MenuListItems>\n    </UnorderedList>\n  );\n};\n\nexport default NavList;\n","import * as Yup from 'yup';\n\nexport default Yup.object({\n  email: Yup.string()\n    .matches(/^((?!gmail(?=(.com))).)*$/, {\n      message: '구글로 로그인해주세요',\n      excludeEmptyString: true,\n    })\n    .matches(\n      /^.*((.com)|(.net)|(.site)|(.kr)|(.edu)|(.org)|(.co)|(.xyz))$/,\n      '이메일주소를 입력해주세요'\n    )\n    .matches(\n      /([a-zA-Z0-9]+)([\\_\\.\\-{1}])?([a-zA-Z0-9]+)$/,\n      '영문과 숫자로 입력해주세요'\n    )\n    .email('이메일형식이 아닙니다')\n    .required('필수 입력 사항입니다'),\n});\n","import React, { memo } from 'react';\nimport {\n  Input as ChakraInput,\n  InputProps,\n} from '@chakra-ui/core';\n\nconst Input = (props: InputProps) => {\n  return (\n    <ChakraInput borderColor=\"lightgray\" {...props}>\n      {props.children}\n    </ChakraInput>\n  );\n};\n\nexport default memo(Input);\n","import { Box, Button } from '@chakra-ui/core';\nimport React from 'react';\nimport { FcGoogle } from 'react-icons/fc';\nimport { FaFacebook } from 'react-icons/fa';\n\n// type SocialButtonProps = {\n//   name: string;\n// };\n\nconst SocialLoginButton /*: React.FC<SocialButtonProps> */ = ({\n  name,\n}) => {\n  const socialLogo =\n    name === '구글' ? FcGoogle : FaFacebook;\n\n  return (\n    <>\n      <Button\n        bg=\"white\"\n        border=\"1px lightgrey solid\"\n        w=\"100%\"\n        color=\"dimgrey\"\n        fontWeight=\"semiregular\"\n        fontSize=\".9rem\"\n        _hover={{ background: 'custom.subtle' }}\n        _active={{ background: 'custom.subtle' }}\n      >\n        <Box\n          as={socialLogo}\n          mr=\"2\"\n          mt=\"0.5\"\n          color=\"#1877F2\"\n          fontSize={'1.05rem'}\n        />\n        {name}으로 로그인하기\n      </Button>\n    </>\n  );\n};\n\nexport default SocialLoginButton;\n","import React from 'react';\nimport { Text } from '@chakra-ui/core';\n\nconst InputErrorMessage: React.FC = ({ children }) => {\n  return (\n    <Text color=\"crimson\" fontSize=\".9rem\" m=\"0\">\n      {children}\n    </Text>\n  );\n};\n\nexport default InputErrorMessage;\n","import React from 'react';\nimport {\n  Box,\n  Button,\n  Divider,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  Stack,\n} from '@chakra-ui/core';\nimport { Field, Form, Formik } from 'formik';\nimport mailCheckSchema from '../../utils/mailCheckSchema';\nimport Input from '../atoms/Input';\nimport SocialLoginButton from '../atoms/SocialButton';\nimport InputErrorMessage from '../atoms/InputErrorMessage';\n\ninterface IMailCheckProps {\n  setModalMode: React.Dispatch<React.SetStateAction<any>>;\n}\n\nconst MailCheckModal: React.FC<IMailCheckProps> = ({\n  setModalMode,\n}) => {\n  const initialValues = {\n    email: '',\n  };\n  const goSignIn = () => setModalMode(1);\n\n  return (\n    <ModalContent>\n      <ModalHeader textAlign=\"center\">\n        로그인하기\n      </ModalHeader>\n      <ModalCloseButton />\n      <ModalBody>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={(values, { setSubmitting }) => {\n            setSubmitting(false);\n            goSignIn();\n          }}\n          validationSchema={mailCheckSchema}\n        >\n          {({ values, errors, isSubmitting }) => (\n            <Form noValidate>\n              <Stack spacing=\"3\">\n                <Box as=\"label\" htmlFor=\"email\">\n                  이메일\n                </Box>\n                <Input\n                  as={Field}\n                  type=\"email\"\n                  name=\"email\"\n                  value={values.email}\n                  borderColor={\n                    errors.email\n                      ? 'custom.warn'\n                      : 'lightgrey'\n                  }\n                  focusBorderColor=\"primary.800\"\n                />\n                {errors.email && (\n                  <InputErrorMessage\n                    children={errors.email}\n                  />\n                )}\n                <Button\n                  type=\"submit\"\n                  w=\"100%\"\n                  bg=\"custom.cta\"\n                  color=\"white\"\n                  isDisabled={\n                    isSubmitting || !!errors.email\n                  }\n                  _disabled={{ background: 'lightgrey' }}\n                  _hover={{ background: 'primary.400' }}\n                >\n                  이메일로 시작\n                </Button>\n                <Divider pt=\"3\" borderColor=\"#aaa\" />\n              </Stack>\n            </Form>\n          )}\n        </Formik>\n      </ModalBody>\n      <ModalFooter display=\"unset\">\n        <Stack>\n          <SocialLoginButton name=\"페이스북\" />\n          <SocialLoginButton name=\"구글\" />\n        </Stack>\n      </ModalFooter>\n    </ModalContent>\n  );\n};\n\nexport default MailCheckModal;\n","import * as Yup from 'yup';\n\nexport default Yup.object({\n  name: Yup.string()\n    .max(12)\n    .required('이름을 입력해주세요'),\n  password: Yup.string().required(\n    '비밀번호를 입력해주세요'\n  ),\n  // allowance: Yup.bool().required(),\n});\n","import {\n  Box,\n  Button,\n  Checkbox,\n  Divider,\n  InputGroup,\n  InputRightElement,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  Stack,\n} from '@chakra-ui/core';\nimport { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\nimport { Field, Form, Formik } from 'formik';\nimport React from 'react';\nimport Input from '../atoms/Input';\nimport sigupSchema from '../../utils/sigupSchema';\nimport InputErrorMessage from '../atoms/InputErrorMessage';\n\ninterface ISignInModal {\n  setModalMode: React.Dispatch<React.SetStateAction<any>>;\n}\n\nconst SignUpModal: React.FC<ISignInModal> = (props) => {\n  const initialValues = {\n    email: '',\n    name: '',\n    password: '',\n    allowance: [],\n  };\n  const [checkedItems, setCheckedItems] = React.useState([\n    false,\n    false,\n  ]);\n\n  const allChecked = checkedItems.every(Boolean);\n  const isIndeterminate =\n    checkedItems.some(Boolean) && !allChecked;\n  const [show, setShow] = React.useState(false);\n  const handlePWshow = () => setShow(!show);\n\n  const handleClickCheck = (e: any) =>\n    setCheckedItems([e.target.checked, e.target.checked]);\n\n  return (\n    <ModalContent>\n      <ModalHeader textAlign=\"center\">회원가입</ModalHeader>\n      <ModalCloseButton />\n      <ModalBody>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={(values, { setSubmitting }) => {\n            setTimeout(() => {\n              alert(JSON.stringify(values, null, 2));\n              setSubmitting(false);\n            }, 200);\n          }}\n          validationSchema={sigupSchema}\n        >\n          {({ values, isSubmitting, errors, touched }) => (\n            <Form noValidate>\n              <Box as=\"label\" htmlFor=\"email\">\n                이메일\n              </Box>\n              <Input\n                as={Field}\n                type=\"email\"\n                name=\"email\"\n                // value={values.email}\n                value=\"ReturnValue@mailCheckAPI.com\"\n                border=\"none+\"\n                focusBorderColor=\"transparent\"\n                bg=\"#eee\"\n                isReadOnly\n              />\n              <Box as=\"label\" htmlFor=\"name\">\n                이름\n              </Box>\n              <Input\n                as={Field}\n                name=\"name\"\n                id=\"name\"\n                value={values.name}\n                border=\"1px lightgrey solid\"\n                focusBorderColor=\"primary.800\"\n              />\n              {errors.name && touched.name && (\n                <InputErrorMessage children={errors.name} />\n              )}\n\n              <Box as=\"label\" htmlFor=\"password\">\n                비밀번호\n              </Box>\n              <InputGroup size=\"md\">\n                <Input\n                  as={Field}\n                  type={show ? 'text' : 'password'}\n                  name=\"password\"\n                  id=\"password\"\n                  pr=\"4.5rem\"\n                  placeholder=\"Enter password\"\n                  border=\"1px lightgrey solid\"\n                  focusBorderColor=\"primary.800\"\n                  value={values.password}\n                />\n\n                <InputRightElement width=\"4.5rem\" w=\"40px\">\n                  <Button\n                    size=\"sm\"\n                    p=\"0\"\n                    onMouseDown={handlePWshow}\n                    onMouseUp={handlePWshow}\n                  >\n                    {show ? <ViewIcon /> : <ViewOffIcon />}\n                  </Button>\n                </InputRightElement>\n              </InputGroup>\n              {errors.password && touched.password && (\n                <InputErrorMessage\n                  children={errors.password}\n                />\n              )}\n\n              <Box mt={5}>\n                <label>\n                  <Field\n                    as={Checkbox}\n                    name=\"allowance\"\n                    type=\"checkbox\"\n                    children=\"전체 동의\"\n                    isChecked={allChecked}\n                    isIndeterminate={isIndeterminate}\n                    onChange={handleClickCheck}\n                    defaultIsChecked\n                    border=\"lightgrey\"\n                  />\n                </label>\n                <Divider mt={2} borderColor=\"#aaa\" />\n                <Stack mt={2} spacing={2}>\n                  <label>\n                    <Field\n                      as={Checkbox}\n                      name=\"allowance\"\n                      type=\"checkbox\"\n                      isChecked={checkedItems[0]}\n                      onChange={handleClickCheck}\n                      children=\"개인정보 수집동의 및 이용 동의 (필수)\"\n                      border=\"lightgrey\"\n                      variantcolor=\"\"\n                    />\n                  </label>\n                  <label>\n                    <Field\n                      as={Checkbox}\n                      name=\"allowance\"\n                      type=\"checkbox\"\n                      isChecked={checkedItems[1]}\n                      onChange={handleClickCheck}\n                      children=\"마케팅 정보 이용에 관한 동의\"\n                      border=\"lightgrey\"\n                    />\n                  </label>\n                </Stack>\n              </Box>\n              <ModalFooter px={0}>\n                <Button\n                  type=\"submit\"\n                  w=\"100%\"\n                  bg=\"custom.cta\"\n                  color=\"white\"\n                  // isDisabled={\n                  //   isSubmitting || !!errors.email\n                  // }\n                  _disabled={{ background: 'lightgrey' }}\n                  _hover={{ background: 'primary.400' }}\n                >\n                  가입하기\n                </Button>\n              </ModalFooter>\n            </Form>\n          )}\n        </Formik>\n      </ModalBody>\n    </ModalContent>\n  );\n};\n\nexport default SignUpModal;\n","import React from 'react';\nimport { Box, List } from '@chakra-ui/core';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nconst Hero: React.FC = () => {\n  const settings = {\n    dots: true,\n    infinite: true,\n    autoplay: true,\n    autoplaySpeed: 2500,\n  };\n\n  return (\n    <Box as=\"section\">\n      <List\n        as={Slider}\n        w=\"100vw\"\n        h=\"56.2vw\"\n        maxH=\"420px\"\n        {...settings}\n        bg=\"rgba(255, 208, 122, 0.323)\"\n      >\n        <Box\n          as=\"li\"\n          listStyleType=\"none\"\n          bg=\"url(https://static.wanted.co.kr/images/newintro/main_kr_mobile.jpg)\"\n          backgroundSize=\"cover\"\n          bgPos=\"50%\"\n          bgRepeat=\"no-repeat\"\n          w=\"100vw\"\n          h=\"56.2vw\"\n          maxH=\"420px\"\n          pos=\"relative\"\n        >\n          <Box\n            pos=\"absolute\"\n            bottom=\"20%\"\n            left=\"60%\"\n            w=\"35vw\"\n            bg=\"custom.subtle\"\n          >\n            <Box as=\"h3\" fontSize=\"1.6rem\">\n              닷비디오\n            </Box>\n            <Box as=\"p\" fontSize=\"1rem\">\n              Lorem ipsum dolor sit amet, consectetur\n              adipisicing elit. Iste tempora dolores\n              voluptatum fugit repellendus, numquam quos!\n            </Box>\n          </Box>\n        </Box>\n        <Box\n          bg=\"url(https://t1.daumcdn.net/brunch/service/user/7J2z/image/01cda2WH_NhJdq8JCCv4l5LlD_Y.jpg)\"\n          backgroundSize=\"cover\"\n          bgPos=\"50%\"\n          bgRepeat=\"no-repeat\"\n          w=\"100vw\"\n          h=\"56.2vw\"\n          maxH=\"420px\"\n          pos=\"relative\"\n        >\n          <Box\n            pos=\"absolute\"\n            bottom=\"20%\"\n            left=\"60%\"\n            w=\"35vw\"\n            bg=\"custom.subtle\"\n          >\n            <Box as=\"h3\" fontSize=\"1.6rem\">\n              닷비디오\n            </Box>\n            <Box as=\"p\" fontSize=\"1rem\">\n              Lorem ipsum dolor sit amet, consectetur\n              adipisicing elit. Iste tempora dolores\n              voluptatum fugit repellendus, numquam quos!\n            </Box>\n          </Box>\n        </Box>\n      </List>\n      {/* </AspectRatio> */}\n    </Box>\n  );\n};\n\nexport default Hero;\n","import { Box, List, Text } from '@chakra-ui/core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport './carousel.scss';\n\ninterface Props {}\n\nconst Carousel = (props: Props) => {\n  const settings = {\n    className: 'slider variable-width',\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 4,\n    swipeToSlide: true,\n    variableWidth: true,\n  };\n\n  return (\n    <Box\n      as=\"section\"\n      w=\"90vw\"\n      padding=\"20px 0\"\n      className=\"user-carousel\"\n    >\n      <Box as=\"h2\">\n        <Text d=\"inline-block\" mr=\"1rem\">\n          아티스트 소개\n        </Text>\n        <Link to=\"/artists\" style={{ fontSize: '.5rem' }}>\n          전체 보기\n        </Link>\n      </Box>\n      <List as={Slider} p=\"12px\" {...settings}>\n        {Array(20)\n          .fill(null)\n          .map((v, i) => (\n            <Box d=\"flex\" align=\"center\" pr=\"12px\" key={i}>\n              {/* <Box\n                className=\"wow\"\n                border=\"2px solid blue\"\n                color=\"white\"\n                bg=\"url(https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT_qq1-gkEykIOOSTYPhCszPuM4UbvWwggGFgSzMiEfiwoLFZyTSLFmlTbAkF566jIbQ4PF_ttg4WGN5lwVinFm4yF4N4Eo7QETn3DDllg&usqp=CAU&ec=45725304)\"\n                w=\"120px\"\n                maxH=\"120px\"\n                pt=\"98%\"\n                bgSize=\"cover\"\n                _hover={{\n                  width: '200px',\n                }}\n              /> */}\n              <div\n                className=\"carousel-item\"\n                style={{\n                  border: '1px solid blue',\n                  color: 'white',\n                  background:\n                    'url(https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTATsQ5Hr_2CJV2TKSo-Py7vjwJ-FGbDncW7A&usqp=CAU)',\n                  width: 90,\n                  height: 90,\n                  backgroundSize: 'cover',\n                  transition: '.2s .6s',\n                }}\n              ></div>\n              <h1>{`${i}`.repeat(2)}</h1>\n            </Box>\n          ))}\n      </List>\n    </Box>\n  );\n};\n\nexport default Carousel;\n","import { ChakraProps, ListItem } from '@chakra-ui/core';\nimport React from 'react';\n\ninterface postTabButtonProps extends ChakraProps {\n  name: string;\n}\n\nconst PostTabButton: React.FC<postTabButtonProps> = (\n  props\n) => {\n  return (\n    <ListItem\n      className={props.name}\n      rounded=\"2px\"\n      p=\"0 8px\"\n      {...props}\n    >\n      {props.children}\n    </ListItem>\n  );\n};\n\nexport default PostTabButton;\n","import {\n  Avatar,\n  Box,\n  Divider,\n  Flex,\n  HStack,\n  Image,\n  List,\n  ListItem,\n  SimpleGrid,\n  Text,\n} from '@chakra-ui/core';\nimport React, { useState } from 'react';\nimport PostTabButton from '../atoms/PostTabButton';\n\ninterface Props {}\n\nconst PostsList = (props: Props) => {\n  const [type, setType] = useState({\n    total: true,\n    music: false,\n    design: false,\n    mediaArt: false,\n  });\n\n  const changeType = (e: any) => {\n    setType((state) => ({\n      total: false,\n      music: false,\n      design: false,\n      mediaArt: false,\n      [e.target.classList[0]]: true,\n    }));\n  };\n\n  return (\n    <Box as=\"section\" w=\"90vw\" userSelect=\"none\">\n      <Box as=\"h2\">장르별 아티스트 게시물</Box>\n      <HStack listStyleType=\"none\" onClick={changeType}>\n        <PostTabButton\n          name=\"total\"\n          bg={type.total ? 'custom.cta' : 'transparent'}\n          color={type.total ? 'white' : 'inherit'}\n        >\n          전체\n        </PostTabButton>\n        <PostTabButton\n          name=\"music\"\n          bg={type.music ? 'custom.cta' : 'transparent'}\n          color={type.music ? 'white' : 'inherit'}\n        >\n          음악\n        </PostTabButton>\n        <PostTabButton\n          name=\"design\"\n          bg={type.design ? 'custom.cta' : 'transparent'}\n          color={type.design ? 'white' : 'inherit'}\n        >\n          디자인\n        </PostTabButton>\n        <PostTabButton\n          name=\"mediaArt\"\n          bg={type.mediaArt ? 'custom.cta' : 'transparent'}\n          color={type.mediaArt ? 'white' : 'inherit'}\n        >\n          미디어아트\n        </PostTabButton>\n      </HStack>\n      <Divider mb=\"4\" />\n      <SimpleGrid minChildWidth=\"180px\" spacing=\"16px\">\n        {Array(12)\n          .fill(null)\n          .map((v, i) => (\n            <Box\n              key={i}\n              minH=\"150px\"\n              w=\"100%\"\n              fontSize=\".8rem\"\n            >\n              <Image src=\"https://i.ytimg.com/vi/mxJGDa7ThbE/hq720.jpg?sqp=-oaymwEZCNAFEJQDSFXyq4qpAwsIARUAAIhCGAFwAQ==&rs=AOn4CLD2kF6j-nY8rIHfCDZqEIcUqGnuhQ\" />\n              <Flex>\n                <Avatar size=\"sm\" my=\"5px\" mr=\"5px\" />\n                <Flex flexShrink={1} wrap=\"wrap\">\n                  <Text d=\"block\">\n                    Lorem iorum nihil,s? Animi doloribus\n                    mollitia nam ab\n                  </Text>\n                  <Flex w=\"100%\" justify=\"space-between\">\n                    <Text>침착맨</Text>\n                    <Text className=\"meta-data\">\n                      좋아요 갯수 & 실허요 갯수\n                    </Text>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </Box>\n          ))}\n      </SimpleGrid>\n    </Box>\n  );\n};\n\nexport default PostsList;\n","import * as React from 'react';\nimport Layout from '../components/Layout';\nimport Navigation from '../components/oraganisms/Navigation';\nimport Hero from '../components/oraganisms/Hero';\nimport UserCarousel from '../components/modules/UserCarousel';\nimport PostsList from '../components/modules/PostsList';\n\nconst Home = () => {\n  return (\n    <Layout>\n      <Navigation />\n      <Hero />\n      <UserCarousel />\n      <PostsList />\n    </Layout>\n  );\n};\n\nexport default Home;\n","import * as React from 'react';\n\nconst NotFound: React.FC = () => {\n  return (\n    <section style={{ textAlign: 'center' }}>\n      <h1>저런..! 페이지가 없습니다</h1>\n      <a href=\"/\">홈으로가기</a>\n    </section>\n  );\n};\n\nexport default NotFound;\n","import {\n  AspectRatio,\n  Avatar,\n  Box,\n  Button,\n  Container,\n  Flex,\n  Heading,\n  HStack,\n  Image,\n  ListItem,\n  SimpleGrid,\n  Stack,\n  StackDivider,\n  Text,\n} from '@chakra-ui/core';\nimport React, { useState } from 'react';\nimport { isForStatement } from 'typescript';\nimport Navigation from '../components/oraganisms/Navigation';\n\ninterface Props {}\n\nconst Profile = (props: Props) => {\n  const [auth, setAuth] = useState(true);\n  return (\n    <>\n      <Navigation />\n      <Box className=\"profile-cover_img\" pos=\"relative\">\n        <AspectRatio minH=\"100px\" ratio={16 / 3}>\n          <Image\n            src=\"https://images.unsplash.com/photo-1531481517150-2228446fb6b0?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1355&q=80\"\n            //   bgSize=\"cover\"\n            //   bgPos=\"50%\"\n            //   backgroundImage=\"url(https://images.unsplash.com/photo-1592396629010-64d6fc2603be?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1940&q=80)\"\n          />\n        </AspectRatio>\n        <Button\n          pos=\"absolute\"\n          size=\"sm\"\n          bottom=\"10%\"\n          right=\"5%\"\n        >\n          편집\n        </Button>\n      </Box>\n      <Container maxW=\"lg\">\n        <Box p=\"4\">\n          <Flex justify=\"space-between\" wrap=\"wrap\">\n            <Box flex=\"1\">\n              <Flex>\n                <Avatar mr=\"10px\" />\n                <Box w=\"100%\" pos=\"relative\">\n                  <Flex direction=\"column\" h=\"100%\">\n                    <Text>데이미언 루이스</Text>\n                    <Text color=\"custom.subText\">\n                      싱어송라이터, 시인\n                    </Text>\n                    <HStack>\n                      <span>팔로</span>\n                      <span>20</span>\n                      <span>닷비디오</span>\n                      <span>21</span>\n                    </HStack>\n                  </Flex>\n                  {auth && (\n                    <Button\n                      pos=\"absolute\"\n                      right=\"0\"\n                      top=\"0\"\n                    >\n                      프로필 관리\n                    </Button>\n                  )}\n                </Box>\n              </Flex>\n              <Text>\n                Lorem, ipsum dolor sit amet consectetur\n                adipisicing elit. Porro accusantium officia\n                delectus veritvoluptates neque ullam iure,\n                ipsa adipisci!\n              </Text>\n            </Box>\n            <Box flex=\"1\" m=\"0 10px\">\n              <video src=\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerJoyrides.mp4\"></video>\n            </Box>\n          </Flex>\n        </Box>\n        <Container bg=\"yellow.300\" className=\"artist-posts\">\n          <Box className=\"tab-menu\">\n            <Button as=\"h3\">게시물</Button>\n            <Button as=\"h3\">닷비디오</Button>\n          </Box>\n          <SimpleGrid\n            bg=\"violet.100\"\n            as=\"ul\"\n            minChildWidth=\"120px\"\n            spacing=\"10px\"\n          >\n            {Array(12)\n              .fill(null)\n              .map((v, i) => (\n                <ListItem d=\"inline\" bg=\"cyan.200\">\n                  {i}\n                </ListItem>\n              ))}\n          </SimpleGrid>\n        </Container>\n      </Container>\n    </>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Route, Switch } from 'react-router-dom';\nimport { history } from '../index';\nimport Home from './Home';\nimport NotFound from './NotFound';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport Profile from './Profile';\n\nconst Router: React.FC = () => (\n  <ErrorBoundary FallbackComponent={NotFound}>\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Route path=\"/profile\" component={Profile} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </ConnectedRouter>\n  </ErrorBoundary>\n);\n\nexport default Router;\n","import { theme } from '@chakra-ui/core';\n\n// add an alias for object responsive prop\n\nconst customTheme = {\n  ...theme,\n  styles: {\n    ...theme.styles,\n    global: {\n      body: {\n        color: '#181818',\n      },\n      h2: {\n        fontSize: '2rem',\n      },\n    },\n  },\n  colors: {\n    ...theme.colors,\n    primary: {\n      100: '#CFD1FD',\n      200: '#A7ABFB',\n      300: '#8388F9',\n      400: '#6268F8',\n      500: '#444BF7',\n      600: '#262EF6',\n      700: '#0B14F5',\n      800: '#0911DD',\n      900: '#080FC7',\n    },\n    basicBlack: '#181818',\n\n    custom: {\n      warn: '#ff4747',\n      cta: '#0000FF',\n      subtle: '#f1f1f1',\n      subText: '#aaa',\n    },\n  },\n};\n\nexport default customTheme;\n","import * as React from 'react';\nimport Router from './pages/Router';\nimport { CSSReset, ChakraProvider } from '@chakra-ui/core';\nimport customTheme from './theme/customTheme';\n\nexport const App: React.FC = () => (\n  <ChakraProvider theme={customTheme} resetCSS={true}>\n    <CSSReset />\n    <Router />\n  </ChakraProvider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport { History } from \"history\";\n\nconst rootReducer = (history: History<unknown>) =>\n  combineReducers({\n    router: connectRouter(history)\n  });\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { History } from \"history\";\nimport reducer from \"./module/reducer\";\n\nconst configStore = (history: History<unknown>) => {\n  const store = createStore(\n    reducer(history),\n    composeWithDevTools(applyMiddleware(routerMiddleware(history)))\n  );\n\n  return store;\n};\n\nexport default configStore;\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createBrowserHistory } from \"history\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport configStore from \"./redux/configStore\";\n\nexport const history = createBrowserHistory();\nconst store = configStore(history);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}