{"version":3,"sources":["components/oraganisms/Navigation.tsx","components/Layout.tsx","components/atoms/NavPrimaryButton.tsx","components/atoms/Logo.tsx","components/atoms/NavList.tsx","components/atoms/InputErrorMessage.tsx","components/atoms/SocialButton.jsx","utils/mailCheckSchema.ts","components/modules/MailCheckModal.tsx","utils/sigupSchema.ts","components/modules/home/SignUpModal.tsx","utils/arrow.ts","components/atoms/home/UserNavListItem.tsx","components/modules/home/UserNavigation.tsx","components/oraganisms/Hero.tsx","components/atoms/PostTabButton.tsx","components/modules/PostItem.tsx","components/modules/home/PostsList.tsx","components/modules/home/UserCarousel.tsx","pages/Home.tsx","pages/NotFound.tsx","components/modules/profile/ProfileCoverImg.tsx","components/modules/profile/UserProfileCard.tsx","components/modules/profile/ProfilePosts.tsx","pages/Profile.tsx","pages/Router.tsx","theme/customTheme.ts","App.tsx","serviceWorker.ts","reportWebVitals.ts","redux/module/reducer.ts","redux/configStore.ts","index.tsx"],"names":["ModalTypes","Layout","props","className","direction","align","overflowX","NavPrimaryButton","bg","memo","Logo","as","fontWeight","fontSize","to","MenuListItems","children","listStyleType","marginRight","NavList","display","flexGrow","InputErrorMessage","color","m","SocialLoginButton","name","socialLogo","FcGoogle","FaFacebook","border","w","_hover","background","_active","mr","mt","Yup","email","matches","message","excludeEmptyString","required","MailCheckModal","setModalMode","textAlign","initialValues","onSubmit","values","setSubmitting","validationSchema","mailCheckSchema","errors","isSubmitting","noValidate","spacing","htmlFor","Field","type","value","borderColor","focusBorderColor","isDisabled","_disabled","pt","max","password","SignUpModal","React","useState","checkedItems","setCheckedItems","allChecked","every","Boolean","isIndeterminate","some","show","setShow","handlePWshow","handleClickCheck","e","target","checked","allowance","setTimeout","alert","JSON","stringify","sigupSchema","touched","isReadOnly","id","size","pr","placeholder","width","p","onMouseDown","onMouseUp","View","ViewOff","Checkbox","isChecked","onChange","defaultIsChecked","variantcolor","px","arrow","content","position","top","left","height","borderBottomColor","UserNavListItem","borderRadius","UserNavigation","isOpen","setOpen","justify","Search","onClick","event","h","pos","state","transform","_before","my","Bell","Navigation","useDisclosure","onOpen","onClose","modal","TypedModal","useCallback","userSelect","zIndex","style","backdropFilter","blockScrollOnMount","closeOnOverlayClick","isCentered","preserveScrollBarGap","Hero","Slider","maxH","dots","infinite","autoplay","autoplaySpeed","backgroundSize","bgPos","bgRepeat","bottom","PostTabButton","rounded","PostItem","onToggle","minH","src","flexShrink","wrap","d","closeOnEsc","ratio","flex","autoPlay","muted","loop","mx","ml","variant","key","PostsList","total","music","design","mediaArt","categoryType","setType","classList","mb","minChildWidth","Array","fill","map","v","i","Carousel","padding","speed","slidesToShow","slidesToScroll","swipeToSlide","variableWidth","transition","repeat","Home","UserCarousel","NotFound","href","ProfileCoverImg","right","UserProfileCard","auth","ProfilePosts","Profile","maxW","Router","FallbackComponent","history","path","component","customTheme","theme","styles","global","body","h2","h3","colors","fontBlack","primary","warn","subText","grey","100","200","300","400","500","600","700","paleLilac","sunflowerYellow","App","resetCSS","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","router","connectRouter","configStore","createStore","reducer","composeWithDevTools","applyMiddleware","routerMiddleware","createBrowserHistory","store","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.c29860bd.chunk.js","sourcesContent":["import {\n  Box,\n  Flex,\n  Modal,\n  ModalOverlay,\n  useDisclosure,\n} from '@chakra-ui/core';\nimport React, {\n  ReactElement,\n  useCallback,\n  useState,\n} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport NavPrimaryButton from '../atoms/NavPrimaryButton';\nimport Logo from '../atoms/Logo';\nimport NavList from '../atoms/NavList';\nimport MailCheckModal from '../modules/MailCheckModal';\nimport SignUpModal from '../modules/home/SignUpModal';\nimport UserNavigation from '../modules/home/UserNavigation';\n\nenum ModalTypes {\n  mailCheck,\n  signIn,\n}\n\nexport default function Navigation(): ReactElement {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const auth = true;\n  const [modal, setModalMode] = useState(\n    ModalTypes['mailCheck']\n  );\n\n  const signInAndUp = useCallback(() => {\n    setModalMode(0);\n    onOpen();\n  }, [onOpen]);\n\n  const TypedModal = useCallback(\n    (type: ModalTypes) => {\n      switch (type) {\n        case 0:\n          return (\n            <MailCheckModal setModalMode={setModalMode} />\n          );\n        case 1:\n          return (\n            <SignUpModal setModalMode={setModalMode} />\n          );\n\n        default:\n          return <Redirect to=\"/\" />;\n      }\n    },\n    [setModalMode]\n  );\n\n  return (\n    <Box\n      className=\"nav-wrapper\"\n      as=\"nav\"\n      p=\".5rem\"\n      color=\"white\"\n      w=\"100vw\"\n      bg=\"rgba(0,0,0,.3)\"\n      pos=\"fixed\"\n      userSelect=\"none\"\n      zIndex=\"2\"\n      style={{ backdropFilter: 'blur(5px)' }}\n    >\n      <Flex\n        className=\"nav-container\"\n        align=\"center\"\n        justify=\"space-between\"\n        w=\"85vw\"\n        m=\"auto\"\n      >\n        <Logo />\n        <NavList />\n        {auth ? (\n          <UserNavigation />\n        ) : (\n          <NavPrimaryButton onClick={signInAndUp}>\n            로그인/회원가입\n          </NavPrimaryButton>\n        )}\n\n        {isOpen && (\n          <Modal\n            blockScrollOnMount={true}\n            closeOnOverlayClick={true}\n            isOpen={isOpen}\n            onClose={onClose}\n            isCentered\n            preserveScrollBarGap\n          >\n            <ModalOverlay />\n            {TypedModal(modal)}\n          </Modal>\n        )}\n      </Flex>\n    </Box>\n  );\n}\n","import { Flex } from '@chakra-ui/core';\nimport React from 'react';\n\nconst Layout: React.FC = (props) => {\n  return (\n    <Flex\n      className=\"layout\"\n      direction=\"column\"\n      align=\"center\"\n      overflowX=\"hidden\"\n      {...props}\n    />\n  );\n};\n\nexport default Layout;\n","import { Button } from '@chakra-ui/core';\nimport React, { memo, ReactChild } from 'react';\n// import { SearchIcon } from '@chakra-ui/icons';\n\ntype LoginProps = {\n  onClick: (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => void;\n  children: ReactChild;\n};\n\nconst NavPrimaryButton: React.FC<LoginProps> = (props) => {\n  return <Button bg=\"primary\" {...props}></Button>;\n};\n\nexport default memo(NavPrimaryButton);\n","import { Box } from '@chakra-ui/core';\nimport React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface Props {}\n\nconst Logo = (props: Props) => {\n  return (\n    <Box as=\"h1\" fontWeight=\"800\" fontSize=\"1.4rem\">\n      <Link to=\"/\">BLUEDOT</Link>\n    </Box>\n  );\n};\n\nexport default memo(Logo);\n","import { ListItem, UnorderedList } from '@chakra-ui/core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst MenuListItems: React.FC = ({ children }) => (\n  <ListItem listStyleType=\"none\" marginRight=\"20px\">\n    {children}\n  </ListItem>\n);\n\ninterface Props {}\n\nconst NavList = (props: Props) => {\n  return (\n    <UnorderedList display=\"flex\" flexGrow={1}>\n      <MenuListItems>\n        <Link to=\"/\">홈</Link>\n      </MenuListItems>\n      <MenuListItems>\n        <Link to=\"/videos\">닷비디오</Link>\n      </MenuListItems>\n      <MenuListItems>\n        <Link to=\"/following\">팔로우</Link>\n      </MenuListItems>\n      <MenuListItems>\n        <Link to=\"/profile\">프로필</Link>\n      </MenuListItems>\n    </UnorderedList>\n  );\n};\n\nexport default NavList;\n","import React from 'react';\nimport { Text } from '@chakra-ui/core';\n\nconst InputErrorMessage: React.FC = ({ children }) => {\n  return (\n    <Text color=\"crimson\" fontSize=\".9rem\" m=\"0\">\n      {children}\n    </Text>\n  );\n};\n\nexport default InputErrorMessage;\n","import { Box, Button } from '@chakra-ui/core';\nimport React from 'react';\nimport { FcGoogle } from 'react-icons/fc';\nimport { FaFacebook } from 'react-icons/fa';\n\n// type SocialButtonProps = {\n//   name: string;\n// };\n\nconst SocialLoginButton /*: React.FC<SocialButtonProps> */ = ({\n  name,\n}) => {\n  const socialLogo =\n    name === '구글' ? FcGoogle : FaFacebook;\n\n  return (\n    <>\n      <Button\n        bg=\"white\"\n        border=\"1px lightgrey solid\"\n        w=\"100%\"\n        color=\"dimgrey\"\n        fontWeight=\"semiregular\"\n        fontSize=\".9rem\"\n        _hover={{ background: 'custom.grey.100' }}\n        _active={{ background: 'custom.grey.100' }}\n      >\n        <Box\n          as={socialLogo}\n          mr=\"2\"\n          mt=\"0.5\"\n          color=\"#1877F2\"\n          fontSize={'1.05rem'}\n        />\n        {name}으로 로그인하기\n      </Button>\n    </>\n  );\n};\n\nexport default SocialLoginButton;\n","import * as Yup from 'yup';\n\nexport default Yup.object({\n  email: Yup.string()\n    .matches(/^((?!gmail(?=(.com))).)*$/, {\n      message: '구글로 로그인해주세요',\n      excludeEmptyString: true,\n    })\n    .matches(\n      /^.*((.com)|(.net)|(.site)|(.kr)|(.edu)|(.org)|(.co)|(.xyz))$/,\n      '이메일주소를 입력해주세요'\n    )\n    .matches(\n      /([a-zA-Z0-9]+)([\\-_.{1}])?([a-zA-Z0-9]+)$/,\n      '영문과 숫자로 입력해주세요'\n    )\n    .email('이메일형식이 아닙니다')\n    .required('필수 입력 사항입니다'),\n});\n","import React from 'react';\nimport {\n  Box,\n  Button,\n  Divider,\n  Input,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  Stack,\n} from '@chakra-ui/core';\nimport { Field, Form, Formik } from 'formik';\nimport InputErrorMessage from '../atoms/InputErrorMessage';\nimport SocialLoginButton from '../atoms/SocialButton';\nimport mailCheckSchema from '../../utils/mailCheckSchema';\n\ninterface IMailCheckProps {\n  setModalMode: React.Dispatch<React.SetStateAction<any>>;\n}\n\nconst MailCheckModal: React.FC<IMailCheckProps> = ({\n  setModalMode,\n}) => {\n  const initialValues = {\n    email: '',\n  };\n  const goSignIn = () => setModalMode(1);\n\n  return (\n    <ModalContent>\n      <ModalHeader textAlign=\"center\">\n        로그인하기\n      </ModalHeader>\n      <ModalCloseButton />\n      <ModalBody>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={(values, { setSubmitting }) => {\n            setSubmitting(false);\n            goSignIn();\n          }}\n          validationSchema={mailCheckSchema}\n        >\n          {({ values, errors, isSubmitting }) => (\n            <Form noValidate>\n              <Stack spacing=\"3\">\n                <Box as=\"label\" htmlFor=\"email\">\n                  이메일\n                </Box>\n                <Input\n                  as={Field}\n                  type=\"email\"\n                  name=\"email\"\n                  value={values.email}\n                  borderColor={\n                    errors.email ? 'warn' : 'lightgrey'\n                  }\n                  focusBorderColor=\"primary\"\n                />\n                {errors.email && (\n                  <InputErrorMessage\n                    children={errors.email}\n                  />\n                )}\n                <Button\n                  type=\"submit\"\n                  w=\"100%\"\n                  bg=\"primary\"\n                  color=\"white\"\n                  isDisabled={\n                    isSubmitting || !!errors.email\n                  }\n                  _disabled={{ background: 'lightgrey' }}\n                  _hover={{ background: 'primary' }}\n                >\n                  이메일로 시작\n                </Button>\n                <Divider pt=\"3\" borderColor=\"#aaa\" />\n              </Stack>\n            </Form>\n          )}\n        </Formik>\n      </ModalBody>\n      <ModalFooter display=\"unset\">\n        <Stack>\n          <SocialLoginButton name=\"페이스북\" />\n          <SocialLoginButton name=\"구글\" />\n        </Stack>\n      </ModalFooter>\n    </ModalContent>\n  );\n};\n\nexport default MailCheckModal;\n","import * as Yup from 'yup';\n\nexport default Yup.object({\n  name: Yup.string()\n    .max(12)\n    .required('이름을 입력해주세요'),\n  password: Yup.string().required(\n    '비밀번호를 입력해주세요'\n  ),\n  // allowance: Yup.bool().required(),\n});\n","import {\n  Box,\n  Button,\n  chakra,\n  Checkbox,\n  Divider,\n  Input,\n  InputGroup,\n  InputRightElement,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  Stack,\n} from '@chakra-ui/core';\nimport { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\nimport { Field, Form, Formik } from 'formik';\nimport React from 'react';\nimport sigupSchema from '../../../utils/sigupSchema';\nimport InputErrorMessage from '../../atoms/InputErrorMessage';\n\ninterface ISignInModal {\n  setModalMode: React.Dispatch<React.SetStateAction<any>>;\n}\n\nconst SignUpModal: React.FC<ISignInModal> = (props) => {\n  const initialValues = {\n    email: '',\n    name: '',\n    password: '',\n    allowance: [],\n  };\n  const [checkedItems, setCheckedItems] = React.useState([\n    false,\n    false,\n  ]);\n\n  const allChecked = checkedItems.every(Boolean);\n  const isIndeterminate =\n    checkedItems.some(Boolean) && !allChecked;\n  const [show, setShow] = React.useState(false);\n  const handlePWshow = () => setShow(!show);\n\n  const handleClickCheck = (\n    e: React.MouseEvent<HTMLButtonElement>\n  ) =>\n    setCheckedItems([\n      (e.target as HTMLInputElement).checked,\n      (e.target as HTMLInputElement).checked,\n    ]);\n\n  return (\n    <ModalContent>\n      <ModalHeader textAlign=\"center\">회원가입</ModalHeader>\n      <ModalCloseButton />\n      <ModalBody>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={(values, { setSubmitting }) => {\n            setTimeout(() => {\n              alert(JSON.stringify(values, null, 2));\n              setSubmitting(false);\n            }, 200);\n          }}\n          validationSchema={sigupSchema}\n        >\n          {({ values, isSubmitting, errors, touched }) => (\n            <Form noValidate>\n              <Box as=\"label\" htmlFor=\"email\">\n                이메일\n              </Box>\n              <Input\n                as={Field}\n                type=\"email\"\n                name=\"email\"\n                // value={values.email}\n                value=\"ReturnValue@mailCheckAPI.com\"\n                border=\"none+\"\n                focusBorderColor=\"transparent\"\n                bg=\"#eee\"\n                isReadOnly\n              />\n              <Box as=\"label\" htmlFor=\"name\">\n                이름\n              </Box>\n              <Input\n                as={Field}\n                name=\"name\"\n                id=\"name\"\n                value={values.name}\n                border=\"1px lightgrey solid\"\n                focusBorderColor=\"primary\"\n              />\n              {errors.name && touched.name && (\n                <InputErrorMessage children={errors.name} />\n              )}\n\n              <Box as=\"label\" htmlFor=\"password\">\n                비밀번호\n              </Box>\n              <InputGroup size=\"md\">\n                <Input\n                  as={Field}\n                  type={show ? 'text' : 'password'}\n                  name=\"password\"\n                  id=\"password\"\n                  pr=\"4.5rem\"\n                  placeholder=\"Enter password\"\n                  border=\"1px lightgrey solid\"\n                  focusBorderColor=\"primary\"\n                  value={values.password}\n                />\n\n                <InputRightElement width=\"4.5rem\" w=\"40px\">\n                  <Button\n                    size=\"sm\"\n                    p=\"0\"\n                    onMouseDown={handlePWshow}\n                    onMouseUp={handlePWshow}\n                  >\n                    {show ? <ViewIcon /> : <ViewOffIcon />}\n                  </Button>\n                </InputRightElement>\n              </InputGroup>\n              {errors.password && touched.password && (\n                <InputErrorMessage\n                  children={errors.password}\n                />\n              )}\n\n              <Box mt={5}>\n                <label>\n                  <Field\n                    as={Checkbox}\n                    name=\"allowance\"\n                    type=\"checkbox\"\n                    children=\"전체 동의\"\n                    isChecked={allChecked}\n                    isIndeterminate={isIndeterminate}\n                    onChange={handleClickCheck}\n                    defaultIsChecked\n                    border=\"lightgrey\"\n                  />\n                </label>\n                <Divider mt={2} borderColor=\"#aaa\" />\n                <Stack mt={2} spacing={2}>\n                  <label>\n                    <Field\n                      as={Checkbox}\n                      name=\"allowance\"\n                      type=\"checkbox\"\n                      isChecked={checkedItems[0]}\n                      onChange={handleClickCheck}\n                      children=\"개인정보 수집동의 및 이용 동의 (필수)\"\n                      border=\"lightgrey\"\n                      variantcolor=\"\"\n                    />\n                  </label>\n                  <label>\n                    <Field\n                      as={Checkbox}\n                      name=\"allowance\"\n                      type=\"checkbox\"\n                      isChecked={checkedItems[1]}\n                      onChange={handleClickCheck}\n                      children=\"마케팅 정보 이용에 관한 동의\"\n                      border=\"lightgrey\"\n                    />\n                  </label>\n                </Stack>\n              </Box>\n              <ModalFooter px={0}>\n                <Button\n                  type=\"submit\"\n                  w=\"100%\"\n                  bg=\"primary\"\n                  color=\"white\"\n                  // isDisabled={\n                  //   isSubmitting || !!errors.email\n                  // }\n                  _disabled={{ background: 'lightgrey' }}\n                  _hover={{ background: 'primary' }}\n                >\n                  가입하기\n                </Button>\n              </ModalFooter>\n            </Form>\n          )}\n        </Formik>\n      </ModalBody>\n    </ModalContent>\n  );\n};\n\nexport default SignUpModal;\n","export const arrow = {\n  content: `''`,\n  position: 'absolute',\n  top: '-20px',\n  left: 0,\n  height: 0,\n  width: 0,\n  border: '10px solid transparent',\n  borderBottomColor: 'grey.100',\n};\n","import { ListItem } from '@chakra-ui/core';\nimport React from 'react';\n\ninterface Props {}\n\nconst UserNavListItem: React.FC<Props> = (props) => (\n  <ListItem\n    p=\"4px 2px\"\n    m=\"2px\"\n    borderRadius=\"5px\"\n    _hover={{ bg: 'grey.200' }}\n  >\n    {props.children}\n  </ListItem>\n);\n\nexport default UserNavListItem;\n","import React, { useState } from 'react';\nimport {\n  Avatar,\n  Flex,\n  Box,\n  List,\n  PseudoProps,\n  ChakraStyleProps,\n  Divider,\n} from '@chakra-ui/core';\nimport { BellIcon, SearchIcon } from '@chakra-ui/icons';\nimport NavPrimaryButton from '../../atoms/NavPrimaryButton';\nimport { arrow } from '../../../utils/arrow';\nimport UserNavListItem from '../../atoms/home/UserNavListItem';\n\nconst UserNavigation: React.FC = () => {\n  const [isOpen, setOpen] = useState(false);\n  return (\n    <Flex\n      w={['200px']}\n      align=\"center\"\n      justify=\"space-between\"\n    >\n      <SearchIcon />\n      <NavPrimaryButton onClick={(event) => {}}>\n        업로드\n      </NavPrimaryButton>\n      <Box>\n        <Avatar\n          h=\"1.7rem\"\n          w=\"1.7rem\"\n          pos=\"relative\"\n          onClick={() => setOpen((state) => !state)}\n        />\n        {isOpen && (\n          <Box\n            pos=\"absolute\"\n            transform=\"translate(3px,20px)\"\n            _before={arrow as PseudoProps<ChakraStyleProps>}\n            color=\"HighlightText\"\n          >\n            <List\n              transform=\"translate(-100px,0)\"\n              p=\"6px\"\n              bg=\"grey.100\"\n              border=\"primary\"\n              borderRadius=\"5px\"\n              w=\"120%\"\n            >\n              <UserNavListItem>\n                프로필 페이지\n              </UserNavListItem>\n              <UserNavListItem>마이페이지</UserNavListItem>\n              <UserNavListItem>계정 설정</UserNavListItem>\n              <UserNavListItem>로그아웃</UserNavListItem>\n              <Divider my=\"8px\" />\n              <UserNavListItem>블루닷 이란</UserNavListItem>\n              <UserNavListItem>\n                크리에이터 도움글\n              </UserNavListItem>\n              <UserNavListItem>\n                서비스 이용약관\n              </UserNavListItem>\n              <UserNavListItem>\n                개인정보 처리방침\n              </UserNavListItem>\n            </List>\n          </Box>\n        )}\n      </Box>\n      <BellIcon h=\"1.6rem\" w=\"1.6rem\" color=\"grey.100\" />\n    </Flex>\n  );\n};\n\nexport default UserNavigation;\n","import React from 'react';\nimport { Box, List } from '@chakra-ui/core';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nconst Hero: React.FC = () => {\n  const settings = {\n    dots: true,\n    infinite: true,\n    autoplay: true,\n    autoplaySpeed: 2500,\n  };\n\n  return (\n    <Box as=\"section\">\n      <List\n        as={Slider}\n        w=\"100vw\"\n        h=\"56.2vw\"\n        maxH=\"420px\"\n        {...settings}\n        bg=\"rgba(255, 208, 122, 0.323)\"\n      >\n        <Box\n          as=\"li\"\n          listStyleType=\"none\"\n          bg=\"url(https://static.wanted.co.kr/images/newintro/main_kr_mobile.jpg)\"\n          backgroundSize=\"cover\"\n          bgPos=\"50%\"\n          bgRepeat=\"no-repeat\"\n          w=\"100vw\"\n          h=\"56.2vw\"\n          maxH=\"420px\"\n          pos=\"relative\"\n        >\n          <Box\n            pos=\"absolute\"\n            bottom=\"20%\"\n            left=\"60%\"\n            w=\"35vw\"\n            color=\"white\"\n          >\n            <Box as=\"h3\" fontSize=\"1.6rem\">\n              닷비디오\n            </Box>\n            <Box as=\"p\" fontSize=\"1rem\">\n              Lorem ipsum dolor sit amet, consectetur\n              adipisicing elit. Iste tempora dolores\n              voluptatum fugit repellendus, numquam quos!\n            </Box>\n          </Box>\n        </Box>\n        <Box\n          bg=\"url(https://t1.daumcdn.net/brunch/service/user/7J2z/image/01cda2WH_NhJdq8JCCv4l5LlD_Y.jpg)\"\n          backgroundSize=\"cover\"\n          bgPos=\"50%\"\n          bgRepeat=\"no-repeat\"\n          w=\"100vw\"\n          h=\"56.2vw\"\n          maxH=\"420px\"\n          pos=\"relative\"\n        >\n          <Box\n            pos=\"absolute\"\n            bottom=\"20%\"\n            left=\"60%\"\n            w=\"35vw\"\n            color=\"white\"\n          >\n            <Box as=\"h3\" fontSize=\"1.6rem\">\n              닷비디오\n            </Box>\n            <Box as=\"p\" fontSize=\"1rem\">\n              Lorem ipsum dolor sit amet, consectetur\n              adipisicing elit. Iste tempora dolores\n              voluptatum fugit repellendus, numquam quos!\n            </Box>\n          </Box>\n        </Box>\n      </List>\n      {/* </AspectRatio> */}\n    </Box>\n  );\n};\n\nexport default Hero;\n","import { ChakraProps, ListItem } from '@chakra-ui/core';\nimport React from 'react';\nimport { ICategoryType } from '../modules/home/PostsList';\n\ninterface postTabButtonProps extends ChakraProps {\n  name: string;\n  type: ICategoryType;\n}\n\nconst PostTabButton: React.FC<postTabButtonProps> = (\n  props\n) => {\n  return (\n    <ListItem\n      className={props.name}\n      rounded=\"2px\"\n      p=\"0 8px\"\n      bg={\n        props.type[props.name] ? 'primary' : 'transparent'\n      }\n      color={props.type[props.name] ? 'white' : 'inherit'}\n      {...props}\n    >\n      {props.children}\n    </ListItem>\n  );\n};\n\nexport default PostTabButton;\n","import {\n  AspectRatio,\n  Avatar,\n  Box,\n  Flex,\n  HStack,\n  Image,\n  Input,\n  List,\n  ListItem,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalOverlay,\n  Text,\n  useDisclosure,\n} from '@chakra-ui/core';\nimport React from 'react';\nimport { FaComment } from 'react-icons/fa';\nimport { FcLike } from 'react-icons/fc';\n\ninterface IPostItem {\n  key?: number;\n}\n\nconst PostItem: React.FC<IPostItem> = (props) => {\n  const {\n    isOpen,\n    onOpen,\n    onClose,\n    onToggle,\n  } = useDisclosure();\n\n  return (\n    <Box\n      key={props.key}\n      minH=\"150px\"\n      w=\"100%\"\n      fontSize=\".8rem\"\n      onClick={() => onToggle()}\n    >\n      <Image src=\"https://i.ytimg.com/vi/mxJGDa7ThbE/hq720.jpg?sqp=-oaymwEZCNAFEJQDSFXyq4qpAwsIARUAAIhCGAFwAQ==&rs=AOn4CLD2kF6j-nY8rIHfCDZqEIcUqGnuhQ\" />\n      <Flex>\n        <Avatar size=\"sm\" my=\"5px\" mr=\"5px\" />\n        <Flex flexShrink={1} wrap=\"wrap\">\n          <Text as=\"h2\" d=\"block\" fontSize=\"1.2em\">\n            Lorem ipsum\n          </Text>\n          <Flex w=\"100%\" justify=\"space-between\">\n            <Text>침착맨</Text>\n            <Text className=\"meta-data\">\n              좋아요 갯수 & 실허요 갯수\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {isOpen && (\n        <Modal\n          blockScrollOnMount={true}\n          closeOnOverlayClick={true}\n          isOpen={isOpen}\n          onClose={onClose}\n          isCentered\n          preserveScrollBarGap\n          closeOnEsc\n        >\n          <ModalOverlay />\n          <ModalBody>\n            <ModalContent>\n              <ModalCloseButton\n                color=\"lightgrey\"\n                zIndex={2}\n              />\n              <AspectRatio ratio={16 / 9}>\n                <Box flex=\"1\">\n                  <video\n                    autoPlay\n                    muted\n                    loop\n                    src=\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerJoyrides.mp4\"\n                  ></video>\n                </Box>\n              </AspectRatio>\n              <Box p=\"20px\">\n                <Box w=\"100%\" pos=\"relative\">\n                  <Flex direction=\"row\" align=\"center\">\n                    <Avatar size=\"sm\" />\n                    <Text mx=\"3\">데이미언 루이스</Text>\n                    <Text flex=\"1\" color=\"primary\">\n                      팔로우\n                    </Text>\n                    <HStack>\n                      <FcLike>하트</FcLike>\n                      <span>\n                        1.7<span>K</span>\n                      </span>\n                      <FaComment>댓글</FaComment>\n                      <span>21</span>\n                    </HStack>\n                  </Flex>\n                  <Box as=\"article\">\n                    <h3>제목이 들어갈 자리</h3>\n                    <Text>\n                      Lorem ipsum dolor sit, amet\n                      consectetur adipisicing elit. Fugiat\n                      dignissimos enim ab debitis eaqum.\n                    </Text>\n                  </Box>\n                  <hr />\n                  <Box className=\"content-area\">\n                    <Flex className=\"myComment\" mt=\"5\">\n                      <Avatar size=\"sm\" />\n                      <Input\n                        ml=\"2\"\n                        flex=\"1\"\n                        type=\"text\"\n                        variant=\"flushed\"\n                      ></Input>\n                    </Flex>\n                    <List>\n                      <ListItem>1</ListItem>\n                      <ListItem>2</ListItem>\n                      <ListItem>3</ListItem>\n                      <ListItem>4</ListItem>\n                    </List>\n                  </Box>\n                </Box>\n              </Box>\n            </ModalContent>\n\n            <ModalFooter>wow</ModalFooter>\n          </ModalBody>\n        </Modal>\n      )}\n    </Box>\n  );\n};\n\nexport default PostItem;\n","import {\n  Box,\n  Divider,\n  HStack,\n  SimpleGrid,\n} from '@chakra-ui/core';\nimport React, { useState } from 'react';\nimport PostTabButton from '../../atoms/PostTabButton';\nimport PostItem from '../PostItem';\n\ninterface Props {}\n\nexport interface ICategoryType {\n  [key: string]: boolean;\n}\n\nconst PostsList = (props: Props) => {\n  const [categoryType, setType] = useState<ICategoryType>({\n    total: true,\n    music: false,\n    design: false,\n    mediaArt: false,\n  });\n\n  const changeCategoryType = (\n    e: React.MouseEvent<Element>\n  ) => {\n    setType((state) => ({\n      total: false,\n      music: false,\n      design: false,\n      mediaArt: false,\n      [(e.target as HTMLElement).classList[0]]: true,\n    }));\n  };\n\n  return (\n    <Box as=\"section\" w=\"90vw\" userSelect=\"none\">\n      <Box as=\"h2\">장르별 아티스트 게시물</Box>\n      <HStack\n        listStyleType=\"none\"\n        onClick={changeCategoryType}\n      >\n        <PostTabButton name=\"total\" type={categoryType}>\n          전체\n        </PostTabButton>\n        <PostTabButton name=\"music\" type={categoryType}>\n          음악\n        </PostTabButton>\n        <PostTabButton name=\"design\" type={categoryType}>\n          디자인\n        </PostTabButton>\n      </HStack>\n      <Divider mb=\"4\" />\n      <SimpleGrid minChildWidth=\"280px\" spacing=\"16px\">\n        {Array(12)\n          .fill(null)\n          .map((v, i) => (\n            <Box key={i}>\n              <PostItem />\n            </Box>\n          ))}\n      </SimpleGrid>\n    </Box>\n  );\n};\n\nexport default PostsList;\n","import { Box, List, Text } from '@chakra-ui/core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport './carousel.scss';\n\nconst Carousel: React.FC = () => {\n  const settings = {\n    className: 'slider variable-width',\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 4,\n    swipeToSlide: true,\n    variableWidth: true,\n  };\n\n  return (\n    <Box\n      as=\"section\"\n      w=\"90vw\"\n      padding=\"20px 0\"\n      className=\"user-carousel\"\n    >\n      <Box as=\"h2\">\n        <Text d=\"inline-block\" mr=\"1rem\">\n          아티스트 소개\n        </Text>\n        <Link to=\"/artists\" style={{ fontSize: '.5rem' }}>\n          전체 보기\n        </Link>\n      </Box>\n      <List as={Slider} p=\"12px\" {...settings}>\n        {Array(20)\n          .fill(null)\n          .map((v, i) => (\n            <Box d=\"flex\" align=\"center\" pr=\"12px\" key={i}>\n              {/* <Box\n                className=\"wow\"\n                border=\"2px solid blue\"\n                color=\"white\"\n                bg=\"url(https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT_qq1-gkEykIOOSTYPhCszPuM4UbvWwggGFgSzMiEfiwoLFZyTSLFmlTbAkF566jIbQ4PF_ttg4WGN5lwVinFm4yF4N4Eo7QETn3DDllg&usqp=CAU&ec=45725304)\"\n                w=\"120px\"\n                maxH=\"120px\"\n                pt=\"98%\"\n                bgSize=\"cover\"\n                _hover={{\n                  width: '200px',\n                }}\n              /> */}\n              <div\n                className=\"carousel-item\"\n                style={{\n                  border: '1px solid blue',\n                  color: 'white',\n                  background:\n                    'url(https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTATsQ5Hr_2CJV2TKSo-Py7vjwJ-FGbDncW7A&usqp=CAU)',\n                  width: 90,\n                  height: 90,\n                  backgroundSize: 'cover',\n                  transition: '.2s .6s',\n                }}\n              ></div>\n              <h1>{`${i}`.repeat(2)}</h1>\n            </Box>\n          ))}\n      </List>\n    </Box>\n  );\n};\n\nexport default Carousel;\n","import * as React from 'react';\nimport Layout from '../components/Layout';\nimport Navigation from '../components/oraganisms/Navigation';\nimport Hero from '../components/oraganisms/Hero';\nimport PostsList from '../components/modules/home/PostsList';\nimport UserCarousel from '../components/modules/home/UserCarousel';\n\nconst Home = () => {\n  return (\n    <Layout>\n      <Navigation />\n      <Hero />\n      <UserCarousel />\n      <PostsList />\n    </Layout>\n  );\n};\n\nexport default Home;\n","import * as React from 'react';\n\nconst NotFound: React.FC = () => {\n  return (\n    <section style={{ textAlign: 'center' }}>\n      <h1>저런..! 페이지가 없습니다</h1>\n      <a href=\"/\">홈으로가기</a>\n    </section>\n  );\n};\n\nexport default NotFound;\n","import {\n  AspectRatio,\n  Box,\n  Button,\n  Image,\n} from '@chakra-ui/core';\nimport React from 'react';\n\nconst ProfileCoverImg: React.FC = () => {\n  return (\n    <Box className=\"profile-cover_img\" pos=\"relative\">\n      <AspectRatio minH=\"100px\" ratio={16 / 3}>\n        <Image\n          src=\"https://images.unsplash.com/photo-1531481517150-2228446fb6b0?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1355&q=80\"\n          //   bgSize=\"cover\"\n          //   bgPos=\"50%\"\n          //   backgroundImage=\"url(https://images.unsplash.com/photo-1592396629010-64d6fc2603be?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1940&q=80)\"\n        />\n      </AspectRatio>\n      <Button\n        pos=\"absolute\"\n        size=\"sm\"\n        bottom=\"10%\"\n        right=\"5%\"\n      >\n        편집\n      </Button>\n    </Box>\n  );\n};\n\nexport default ProfileCoverImg;\n","import {\n  AspectRatio,\n  Avatar,\n  Box,\n  Button,\n  Flex,\n  HStack,\n  Text,\n} from '@chakra-ui/core';\nimport React from 'react';\n\ninterface Props {\n  auth: boolean;\n}\n\nconst UserProfileCard = (props: Props) => {\n  return (\n    <Flex justify=\"space-between\" wrap=\"wrap\" p=\"3vw 0\">\n      <Box flex=\"1\">\n        <Flex>\n          <Avatar mr=\"10px\" size=\"lg\" />\n          <Box w=\"100%\" pos=\"relative\">\n            <Flex direction=\"column\" h=\"100%\">\n              <Text as=\"h2\" fontSize=\"1.3rem\">\n                데이미언 루이스\n              </Text>\n              <Text color=\"subText\">\n                싱어송라이터, 시인\n              </Text>\n              <HStack>\n                <span>팔로</span>\n                <span>20</span>\n                <span>닷비디오</span>\n                <span>21</span>\n              </HStack>\n            </Flex>\n            {props.auth && (\n              <Button pos=\"absolute\" right=\"0\" top=\"0\">\n                프로필 관리\n              </Button>\n            )}\n          </Box>\n        </Flex>\n        <Text mt=\"1rem\">\n          Lorem, ipsum dolor sit amet consectetur\n          adipisicing elit. Porro accusantium officia\n          delectus veritvoluptates neque ullam iure, ipsa\n          adipisci!\n        </Text>\n      </Box>\n      <AspectRatio ratio={16 / 9} flex=\"1\" ml=\"20px\">\n        <video src=\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerJoyrides.mp4\"></video>\n      </AspectRatio>\n    </Flex>\n  );\n};\n\nexport default UserProfileCard;\n","import {\n  Box,\n  Button,\n  ListItem,\n  SimpleGrid,\n} from '@chakra-ui/core';\nimport React from 'react';\nimport PostItem from '../PostItem';\n\nconst ProfilePosts: React.FC = () => {\n  return (\n    <Box className=\"artist-posts\">\n      <Box className=\"tab-menu\">\n        <Button as=\"h3\">게시물</Button>\n        <Button as=\"h3\">닷비디오</Button>\n      </Box>\n      <SimpleGrid\n        bg=\"violet.100\"\n        as=\"ul\"\n        minChildWidth=\"220px\"\n        spacing=\"10px\"\n      >\n        {Array(12)\n          .fill(null)\n          .map((v, i) => (\n            <PostItem>{i}</PostItem>\n          ))}\n      </SimpleGrid>\n    </Box>\n  );\n};\n\nexport default ProfilePosts;\n","import { Container } from '@chakra-ui/core';\nimport React, { useState } from 'react';\nimport ProfileCoverImg from '../components/modules/profile/ProfileCoverImg';\nimport UserProfileCard from '../components/modules/profile/UserProfileCard';\nimport Navigation from '../components/oraganisms/Navigation';\nimport ProfilePosts from '../components/modules/profile/ProfilePosts';\n\nconst Profile: React.FC = () => {\n  const [auth, setAuth] = useState(true);\n  return (\n    <>\n      <Navigation />\n      <ProfileCoverImg />\n      <Container maxW=\"lg\">\n        <UserProfileCard auth={auth} />\n        <ProfilePosts />\n      </Container>\n    </>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Route, Switch } from 'react-router-dom';\nimport { history } from '../index';\nimport Home from './Home';\nimport NotFound from './NotFound';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport Profile from './Profile';\n\nconst Router: React.FC = () => (\n  <ErrorBoundary FallbackComponent={NotFound}>\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Route path=\"/profile\" component={Profile} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </ConnectedRouter>\n  </ErrorBoundary>\n);\n\nexport default Router;\n","import { theme } from '@chakra-ui/core';\n\n// add an alias for object responsive prop\n\nconst customTheme = {\n  ...theme,\n  styles: {\n    ...theme.styles,\n    global: {\n      body: {\n        color: '#181818',\n      },\n      h2: {\n        fontSize: '2rem',\n      },\n      h3: {\n        fontSize: '1.8rem',\n      },\n    },\n  },\n  colors: {\n    ...theme.colors,\n    fontBlack: '#181818',\n\n    primary: '#0000FF',\n    warn: '#ff4747', //coral\n    subText: '#aaa',\n    grey: {\n      100: '#f0f0f0',\n      200: '#e2e2e2',\n      300: '#b2b2b2',\n      400: '#8d8d8d',\n      500: '#565656',\n      600: '#303030',\n      700: '#000000',\n    },\n\n    paleLilac: '#efefff',\n    sunflowerYellow: '#ffd200',\n  },\n};\n\nexport default customTheme;\n","import * as React from 'react';\nimport Router from './pages/Router';\nimport { CSSReset, ChakraProvider } from '@chakra-ui/core';\nimport customTheme from './theme/customTheme';\n\nexport const App: React.FC = () => (\n  <ChakraProvider theme={customTheme} resetCSS={true}>\n    <CSSReset />\n    <Router />\n  </ChakraProvider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport { History } from \"history\";\n\nconst rootReducer = (history: History<unknown>) =>\n  combineReducers({\n    router: connectRouter(history)\n  });\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { History } from \"history\";\nimport reducer from \"./module/reducer\";\n\nconst configStore = (history: History<unknown>) => {\n  const store = createStore(\n    reducer(history),\n    composeWithDevTools(applyMiddleware(routerMiddleware(history)))\n  );\n\n  return store;\n};\n\nexport default configStore;\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createBrowserHistory } from \"history\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport configStore from \"./redux/configStore\";\n\nexport const history = createBrowserHistory();\nconst store = configStore(history);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}